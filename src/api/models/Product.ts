/* tslint:disable */
/* eslint-disable */
/**
 * eCommerce API
 * API for eCommerce app that displays a list of products and product details.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * Unique identifier of the product
     * @type {string}
     * @memberof Product
     */
    id: string;
    /**
     * Title of the product
     * @type {string}
     * @memberof Product
     */
    title: string;
    /**
     * Category of the product
     * @type {string}
     * @memberof Product
     */
    category: string;
    /**
     * URL of the product image
     * @type {string}
     * @memberof Product
     */
    image: string;
    /**
     * Total number of items sold
     * @type {number}
     * @memberof Product
     */
    sold: number;
    /**
     * Price of the product
     * @type {number}
     * @memberof Product
     */
    price: number;
    /**
     * Total sales value in dollars
     * @type {number}
     * @memberof Product
     */
    salesValue: number;
}

/**
 * Check if a given object implements the Product interface.
 */
export function instanceOfProduct(value: object): value is Product {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('sold' in value) || value['sold'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('salesValue' in value) || value['salesValue'] === undefined) return false;
    return true;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'category': json['category'],
        'image': json['image'],
        'sold': json['sold'],
        'price': json['price'],
        'salesValue': json['sales_value'],
    };
}

export function ProductToJSON(value?: Product | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'title': value['title'],
        'category': value['category'],
        'image': value['image'],
        'sold': value['sold'],
        'price': value['price'],
        'sales_value': value['salesValue'],
    };
}

